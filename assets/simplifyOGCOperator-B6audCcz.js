import{s as a}from"./SimpleGeometryCursor-B92kdZ15.js";import{m as p}from"./OperatorSimplifyOGC-Dn1lLKIc.js";import{fromSpatialReference as s,getSpatialReference as u,fromGeometry as m,toGeometry as i}from"./apiConverter-DEm72vlj.js";import"./Point2D-DKT_pVCB.js";import"./ProjectionTransformation-Sph8jFYB.js";import"./Envelope2D-DM-TR0g7.js";import"./Transformation2D-BY72LdYb.js";import"./index-DeoyqcX0.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./jsonConverter-DPdMIhlb.js";const o=new p;function c(t,e,r){return o.execute(t,e,r,null)}function f(t,e,r){const n=o.executeMany(new a(t),e,r,null);return Array.from(n)}function l(t,e,r,n){return o.isSimple(t,e,r,n,null)}function x(){return o.supportsCurves()}function j(t){const e=u(t);return i(c(m(t),s(e),!1),e)}function A(t){const e=t.map(m),r=u(t);return f(e,s(r),!1).map(n=>i(n,r))}function Z(t,e){return l(m(t),s(u(t)),e!=null,e??null)}const b=x();export{j as execute,A as executeMany,Z as isSimple,b as supportsCurves};
