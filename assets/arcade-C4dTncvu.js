import{bQ as W,s as P,gb as L,a3 as U,aA as ee,C as N,ad as te,bY as G,b_ as B,bZ as O,a6 as ae,fT as re}from"./index-CLxXbLZV.js";import{t as ne}from"./ImmutableArray-BPVd6ESQ.js";let v=null;function oe(e,n,r,o={}){const a=n.elementType,c="value",u=a.type==="array"?[{name:c,type:a.type,elementType:a.elementType}]:a.type==="dictionary"?[{name:c,type:a.type,properties:a.properties}]:[{name:c,type:a.type}];return new ne(e.map(s=>{const t={};return R(t,u,{[c]:s},r,o),t[c]}))}function ce(e,n,r={}){const o=e instanceof ae?new re({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return n.constructFeatureSet(o,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function se(e,n,r={}){const{spatialReference:o,interceptor:a,lruCache:c}=r;return typeof e=="string"?n.createFeatureSetCollectionFromService(e,o,c,a):n.createFeatureSetCollectionFromMap(e,o,c,a)}function ie(e,n,r,o={}){const a=Object.create(null);return R(a,n.properties,e,r,o),new v.Dictionary(a)}function R(e,n,r,o,a={}){const c={};for(const u of Object.keys(r))c[u.toLowerCase()]=r[u];for(const u of n){const s=u.name.toLowerCase();if(a.variablesPreProcessed)e[s]=c[s];else switch(u.type){case"array":{const t=c[s];e[s]=t==null?null:oe(t,u,o,a);break}case"feature":{const t=c[s];e[s]=t==null?null:v.Feature.createFromGraphic(t,a?.timeZone);break}case"featureSet":{const t=c[s];e[s]=t==null?null:o?ce(t,o,a):null;break}case"featureSetCollection":{const t=c[s];e[s]=t==null?null:o?se(t,o,a):null;break}case"dictionary":{const t=c[s];e[s]=t==null?null:ie(t,u,o,a);break}case"date":{const t=c[s];e[s]=t?t instanceof O?t:a?.timeZone?O.dateJSAndZoneToArcadeDate(t,a?.timeZone):O.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=c[s];e[s]=t?t instanceof B?t:B.fromReader(t):null;break}case"time":{const t=c[s];e[s]=t?t instanceof G?t:G.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[s]=c[s];break;case"voxel":{const t=c[s];e[s]=t==null?null:new v.Voxel(t,a?.timeZone);break}}}}function Q(e,n){for(const r of e)n.push(r),r.type==="dictionary"&&Q(r.properties,n);return n}function D(e,n,r,o,a){const{spatialReference:c,interceptor:u,lruCache:s,console:t,abortSignal:C,timeZone:x,services:S={portal:N.getDefault()}}=r,d={vars:{},spatialReference:c,interceptor:u,timeZone:x,lrucache:s,useAsync:a,services:S,console:t,abortSignal:C};return n&&R(d.vars,e.variables,n,o,r),d}function w(e,n){switch(n.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const r=(e.type,e),o="geometry"in r?r.geometry():null,a="readAttributes"in r?r.readAttributes():r.attributes;return new te({geometry:o,attributes:a})}case"dictionary":{const r=e,o=r.attributes,a={};for(const c of Object.keys(o))a[c]=w(r.field(c),n);return a}case"array":return("toArray"in e?e.toArray():e).map(r=>w(r,n))}return e}const J={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},M={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},z={variables:[{name:"$voxel",type:"voxel"}]},Y=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",J],["popup-element",J],["popup-feature-reduction",M],["popup-element-feature-reduction",M],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",z],["popup-element-voxel",z]]);function de(e){e==="feature-reduction-popup"?(L(U.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(L(U.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const n=Y.get(e);if(!n){const r=Array.from(Y.keys()).map(o=>`'${o}'`).join(", ");throw new P("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${r}`)}return ee(n)}async function fe(e,n,r={}){v||(v=await W());const{arcade:o,arcadeUtils:a,batchExec:{createBatchExecutor:c},aiServices:{BatchTranslationServiceFactory:u,PortalTranslationService:s}}=v,{loadScriptDependencies:t,referencesMember:C,scriptIsAsync:x}=o,S=Q(n.variables,[]),d=S.filter(i=>i.type==="featureSet"||i.type==="featureSetCollection").map(i=>i.name.toLowerCase()),m=o.parseScript(e,d);if(!m)throw new P("arcade:invalid-script","Unable to create SyntaxTree");const V=a.extractFieldNames(m),X=o.scriptTouchesGeometry(m),Z=S.map(i=>i.name.toLowerCase()).filter(i=>C(m,i)),f=x(m,d);await t(m,f,d);const j={vars:{},useAsync:f};for(const i of Z)j.vars[i]="any";const{lruCache:A,services:k}=r,T=o.compileScript(m,j),I=o.featureSetUtils();return{execute:(i,l={})=>{if(f)throw new P("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const p={...k,...l.services},b={lruCache:A,...l,services:p},y=T(D(n,i,b,I,f));return l.rawOutput?y:w(y,a)},executeAsync:async(i,l={})=>{const p={...k,...l.services},b={lruCache:A,...l,services:p},y=await T(D(n,i,b,I,f));return l.rawOutput?y:w(y,a)},executeAsyncBatch:async(i,l,p={})=>{const b=[],y=c(i,async(g,$)=>{const q=l(g);try{const h={...F,translation:_.create($)},H={lruCache:A,...p,services:h},E=await T(D(n,q,H,I,f)),K=p.rawOutput?E:w(E,a);b.push({id:$.id,result:{status:"fulfilled",value:K}})}catch(h){throw b.push({id:$.id,result:{status:"rejected",reason:h}}),h}},p.maxConcurrency??64,p.abortSignal),F={...k,...p.services},_=new u(y,F.translation??new s(F.portal??N.getDefault(),p.console));return await y.run(),b.sort(({id:g},{id:$})=>g-$).map(({result:g})=>g)},isAsync:f,variablesUsed:Z,fieldsUsed:V,geometryUsed:X,syntaxTree:m}}export{fe as createArcadeExecutor,de as createArcadeProfile};
