import{ab as m,ac as c,ad as g,a7 as n,ae as l,Z as h,$ as d,r as o,v as w,y as u}from"./index-Cyz3pbfr.js";import{S as y,u as V}from"./LayerView-C_fE5Gya.js";import{t as v}from"./GraphicContainer-CpFvLHgX.js";import{O as f}from"./GraphicsView2D-LGQtBoUi.js";import"./Container-DfYkluiO.js";import"./layerViewUtils-84jomogG.js";import"./AGraphicContainer-Bssb4RA5.js";import"./TechniqueInstance-frrMCpoj.js";import"./UpdateTracking2D-CIAzyST6.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-Brp6JZ9G.js";import"./memoryEstimations-Dm0CpiAe.js";import"./GeometryUtils-B-_R_0rK.js";import"./rasterizingUtils-DyWbCVZz.js";import"./floatRGBA-D0eYGs6i.js";import"./Rect-CUzevAry.js";import"./Utils-C6mgzdKP.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-D9KDBuGm.js";import"./ProgramTemplate-C9c6I2Ak.js";import"./TileContainer-C0-M9uwo.js";import"./WGLContainer-BIWWr_St.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-DXQNBBcR.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CcUlKWCC.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-DqN5dNbq.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-BMCI3D2d.js";import"./ShaderBuilder-BReWRLrh.js";import"./BindType-BBwFZqyN.js";import"./utils-CRoiphGL.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DeLO-hcP.js";import"./OverrideHelper-Db1-98ez.js";import"./colorUtils-DAyV33Zq.js";import"./quantizationUtils-DUu8BWVl.js";import"./AttributeStore-2wZyXYt6.js";import"./queryUtils-B-qlVXq5.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C9MTPFta.js";import"./normalizeUtilsSync-RMPVvh-g.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-CKphfhIH.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>this.layer?.visible,()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):n.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h(()=>!this.destroyed&&this._removeHighlights(p,a))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
