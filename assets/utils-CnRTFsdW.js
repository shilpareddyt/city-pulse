import{bP as z,bQ as C,f as O,ea as R,ba as A,bC as G,eb as Y,ec as v,ed as D,s as U,ee as P}from"./index-BOwmS6EZ.js";import{j as S}from"./quantizationUtils-S0wm1DkY.js";import{$ as V}from"./utils-CHc1p1fg.js";import{m as E,B as _}from"./utils-Brd6n5sB.js";let c=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function X(e,t,n,i){const r=R(n)?A(n):null,o=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(a=>{const l=new G(a.geometry);return S(t,l,l),a.geometry=r?k(l,o??0,i[0]):l,a})}function ee(e,t=18,n,i,r){const o=new Float64Array(i*r);t=Math.round(P(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const I=Y(n);for(const{geometry:p,attributes:F}of e){const{x:g,y:f}=p,b=Math.max(0,g-t),N=Math.max(0,f-t),M=Math.min(r,f+t),w=Math.min(i,g+t),h=+I(F);for(let m=N;m<M;m++)for(let d=b;d<w;d++){const x=m*i+d,$=D(d-g,m-f,t)*h,u=o[x]+=$;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function q(e){const t=L.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(o||0)}async function te(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:o,fieldDelimiter:a,fieldInfos:l,timeZone:I}=e,p=i&&l?.find(u=>u.name.toLowerCase()===i.toLowerCase()),F=!!p&&z(p),g=!!p&&V(p),f=e.valueExpression,b=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await C();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new O(h.spatialReference)}):null}const x=e.fieldInfos,$=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const y=u.attributes;let s;if(f){const T=$?{...u,layer:$}:u,j=c.createExecContext(T,d,I);s=c.executeFunction(m,j)}else y&&(s=y[i],r?(s=`${E(s)}${a}${E(y[r])}`,o&&(s=`${s}${a}${E(y[o])}`)):typeof s=="string"&&n&&(g?s=s?new Date(s).getTime():null:F&&(s=s?q(s):null)));if(b&&typeof s=="number"&&isFinite(s)){const T=y&&parseFloat(y[N]);s=_(s,b,T,M)}w.push(s)}),w}function ne(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ie(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let o="";return o=i&&r?B(i,r):i||r,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function re(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function se(e,t,n){const i=Q({layer:e,fields:t});if(i.length)return new U(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=Z({layer:e,fields:t});return r.length?new U(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Q(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Z(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ne as F,q as I,re as M,ie as N,se as T,B as U,te as b,ee as w,X as x};
