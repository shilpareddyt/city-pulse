import{ab as m,ac as c,ad as g,a7 as n,ae as l,Z as h,$ as d,r as o,v as w,y as u}from"./index-BOwmS6EZ.js";import{S as y,u as V}from"./LayerView-CmXG9K54.js";import{t as v}from"./GraphicContainer-Dh-Q9A13.js";import{O as f}from"./GraphicsView2D-D5cngTOd.js";import"./Container-Dd0tx3Kf.js";import"./layerViewUtils-CZ__Ca56.js";import"./AGraphicContainer-BdaNA_06.js";import"./TechniqueInstance-Dm0bO55L.js";import"./UpdateTracking2D-DHaat2TX.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-CeT5yRcH.js";import"./memoryEstimations-iuMSXS9J.js";import"./GeometryUtils-aBFu6nbO.js";import"./rasterizingUtils-BIlcPoez.js";import"./floatRGBA-BAe51B3Z.js";import"./Rect-CUzevAry.js";import"./Utils-DJx9_CRb.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BmueokIX.js";import"./ProgramTemplate-9Q6CqnxS.js";import"./TileContainer-Djjc09qM.js";import"./WGLContainer-D8iJEhd4.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-b7Xhm5b8.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BUvKjWQj.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-CB9zrhzG.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DjqsQhH6.js";import"./ShaderBuilder-Dd8WKw_t.js";import"./BindType-BBwFZqyN.js";import"./utils-Bxzy_FUM.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CAm8ic82.js";import"./OverrideHelper-CdneQDn6.js";import"./colorUtils-BaXh2dcS.js";import"./quantizationUtils-S0wm1DkY.js";import"./AttributeStore-DZrMsd5c.js";import"./queryUtils-BMZ6dPdf.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Btf9dqY0.js";import"./normalizeUtilsSync-Bn-rfYEp.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-DMOOUDbY.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>this.layer?.visible,()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):n.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h(()=>!this.destroyed&&this._removeHighlights(p,a))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
