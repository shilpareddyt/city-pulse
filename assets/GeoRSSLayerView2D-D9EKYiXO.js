import{a4 as l,a5 as h,a6 as g,a7 as w,a8 as f,a9 as u,aa as n,r as d,y as V}from"./index-Cyz3pbfr.js";import{S as b,u as S}from"./LayerView-C_fE5Gya.js";import{t as _}from"./GraphicContainer-CpFvLHgX.js";import{O as T}from"./GraphicsView2D-LGQtBoUi.js";import"./Container-DfYkluiO.js";import"./layerViewUtils-84jomogG.js";import"./AGraphicContainer-Bssb4RA5.js";import"./TechniqueInstance-frrMCpoj.js";import"./UpdateTracking2D-CIAzyST6.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-Brp6JZ9G.js";import"./memoryEstimations-Dm0CpiAe.js";import"./GeometryUtils-B-_R_0rK.js";import"./rasterizingUtils-DyWbCVZz.js";import"./floatRGBA-D0eYGs6i.js";import"./Rect-CUzevAry.js";import"./Utils-C6mgzdKP.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-D9KDBuGm.js";import"./ProgramTemplate-C9c6I2Ak.js";import"./TileContainer-C0-M9uwo.js";import"./WGLContainer-BIWWr_St.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-DXQNBBcR.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CcUlKWCC.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-DqN5dNbq.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-BMCI3D2d.js";import"./ShaderBuilder-BReWRLrh.js";import"./BindType-BBwFZqyN.js";import"./utils-CRoiphGL.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DeLO-hcP.js";import"./OverrideHelper-Db1-98ez.js";import"./colorUtils-DAyV33Zq.js";import"./quantizationUtils-DUu8BWVl.js";import"./AttributeStore-2wZyXYt6.js";import"./queryUtils-B-qlVXq5.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C9MTPFta.js";import"./normalizeUtilsSync-RMPVvh-g.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-CKphfhIH.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(e=>{const i=this._popupTemplates.get(e),s=e.hitTest(t);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=i;return s}).map(e=>({type:"graphic",graphic:e,layer:o,mapPoint:t}))}update(t){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:e}of t){const i=g.fromJSON(o),s=new w(i.features),p=e.drawingInfo,c=r?f.fromJSON(r):null,a=u(p.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=m,this._popupTemplates.set(m,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=d([V("esri.views.2d.layers.GeoRSSLayerView2D")],y);const ut=y;export{ut as default};
