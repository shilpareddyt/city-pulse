import{l as p,df as h,dg as c,dh as m,di as s,dj as y,dk as x,dl as d,r,v as i,y as A}from"./index-DYh0j3Yd.js";import{e as n}from"./mat4f64-q_b6UJoq.js";import{b as g}from"./quat-Ccfdd35r.js";import{e as b}from"./quatf64-aQ5IuZRd.js";import{B as v,q as M,w as l,y as N,z as f}from"./axisAngleDegrees-BRopY9qu.js";var a,e;let o=(e=class extends p{constructor(t){super(t),this.translation=h(),this.rotationAxis=c(v),this.rotationAngle=0,this.scale=m(1,1,1)}get rotation(){return M(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=s(l(t)),this.rotationAngle=N(t)}get localMatrix(){const t=n();return g(u,l(this.rotation),f(this.rotation)),y(t,u,this.translation,this.scale),t}get localMatrixInverse(){return x(n(),this.localMatrix)}equals(t){return this===t||t!=null&&d(this.localMatrix,t.localMatrix)}clone(){const t={translation:s(this.translation),rotationAxis:s(this.rotationAxis),rotationAngle:this.rotationAngle,scale:s(this.scale)};return new a(t)}},a=e,e);r([i({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"translation",void 0),r([i({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAxis",void 0),r([i({type:Number,nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAngle",void 0),r([i({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"scale",void 0),r([i()],o.prototype,"rotation",null),r([i()],o.prototype,"localMatrix",null),r([i()],o.prototype,"localMatrixInverse",null),o=a=r([A("esri.geometry.support.MeshTransform")],o);const u=b();export{o as A};
