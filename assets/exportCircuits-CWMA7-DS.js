import{l as y,z as f,r as e,v as s,bx as v,y as x,D as h,G as j,F as E,H as O}from"./index-Cyz3pbfr.js";import{t as S}from"./utils-Dib61UJt.js";import"./applyEditsUtils-Bygi9rL7.js";import"./MeshTransform-BmLqAtTg.js";import"./mat4f64-q_b6UJoq.js";import"./quat-N2rDmuLZ.js";import"./mat3f64-B5o_lm6j.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-Dvl-yl-J.js";import"./editingSupport-B9vneAui.js";var o;let t=o=class extends y{static from(r){return f(o,r)}constructor(r){super(r),this.circuits=null,this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(r,i){return S(r)}};e([s({json:{type:[Object]}})],t.prototype,"circuits",void 0),e([s({type:Date})],t.prototype,"moment",void 0),e([s({type:Boolean,json:{type:Boolean,write:!0}})],t.prototype,"exceededTransferLimit",void 0),e([s({type:[Object]})],t.prototype,"serviceEdits",void 0),e([v("serviceEdits")],t.prototype,"readServiceEdits",null),t=o=e([x("esri.rest.networks.circuits.support.ExportCircuitsResult")],t);async function g(r,i,a){const c=h(r),p=i.toJSON();i.circuits&&(p.circuits=JSON.stringify(i.circuits));const n={...p,f:"json"},m=j({...c.query,...n}),u=E(m,{...a,method:"post"}),d=`${c.path}/circuits/export`,{data:l}=await O(d,u);return t.fromJSON(l)}export{g as exportCircuits};
