import{ad as u,a7 as f,ae as w,Z as g,a4 as h,a5 as o,ar as y,r as _,y as V}from"./index-DYh0j3Yd.js";import{S as v,u as C}from"./LayerView-BhjeUuOj.js";import{t as c}from"./GraphicContainer-DhU0TOY5.js";import{O as d}from"./GraphicsView2D-FMeHjZa4.js";import"./Container-BKQ4EuhA.js";import"./layerViewUtils-jIvUOl_S.js";import"./AGraphicContainer-B1GlSa2g.js";import"./TechniqueInstance-DNQqS0CU.js";import"./UpdateTracking2D-BAgZfWKo.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-jLaWtbcE.js";import"./memoryEstimations-Eos2W22z.js";import"./GeometryUtils-BK0D6PjF.js";import"./rasterizingUtils-C02vX10a.js";import"./floatRGBA-CWoI2W-h.js";import"./Rect-CUzevAry.js";import"./Utils-7DZ-ofaD.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CgISsPs0.js";import"./ProgramTemplate-C7y9rtxa.js";import"./TileContainer-CKlgzX_o.js";import"./WGLContainer-DtdZjNxq.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-Cnn0RrKE.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-C2yiVfGX.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-Ci3llB4S.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-C0Y5mqxW.js";import"./ShaderBuilder-D3O0vY66.js";import"./BindType-BBwFZqyN.js";import"./utils-DDeYtVd-.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DxR46OYC.js";import"./OverrideHelper-BtsRKefj.js";import"./colorUtils-CI-c7EUW.js";import"./quantizationUtils-BNTgGVCI.js";import"./AttributeStore-B_TGH1HD.js";import"./queryUtils-DK-sPl-2.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CT-v7rPj.js";import"./normalizeUtilsSync-yaUFPhbo.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-NdqlweUi.js";const m="sublayers",l="layerView",H=new Set(["default"]);let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,e){return Array.from(this.graphicsViews(),t=>{const s=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const a=this._graphicsViewsFeatureCollectionMap.get(t);for(const r of s)!r.popupTemplate&&a.popupTemplate&&(r.popupTemplate=a.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,e="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(a=>a&&a.uid):f.isCollection(i)&&(t=i.map(a=>a&&a.uid).toArray());const s=t?.filter(w);return s?.length?(this._addHighlight(s),g(()=>this._removeHighlight(s))):g()}update(i){for(const e of this.graphicsViews())e.processUpdate(i)}attach(){const i=this.view,e=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of t){const a=new c(this.view.featuresTilingScheme),r=new d({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:e,container:a});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([h(()=>s.visible,p=>r.container.visible=p,o),h(()=>r.updating,()=>this.notifyChange("updating"),o)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),m)}detach(){this._destroyGraphicsViews(),this.removeHandles(m)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],e=this.view,t=()=>this.requestUpdate();for(const s of this.layer.sublayers){const a=new c(this.view.featuresTilingScheme);a.fadeTransitionEnabled=!0;const r=new d({view:e,graphics:s.graphics,requestUpdateCallback:t,container:a});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),h(()=>s.visible,p=>r.container.visible=p,o),h(()=>r.updating,()=>this.notifyChange("updating"),o)],l),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;t===0?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),e=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map(s=>({objectId:s,highlightFlags:e})))}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const wi=n;export{wi as default};
