import{ab as m,ac as c,ad as g,a7 as n,ae as l,Z as h,$ as d,r as o,v as w,y as u}from"./index-DeoyqcX0.js";import{S as y,u as V}from"./LayerView-JsDCIYx1.js";import{t as v}from"./GraphicContainer-i_zos-As.js";import{O as f}from"./GraphicsView2D-BJXe39q8.js";import"./Container-2rUsmYP5.js";import"./layerViewUtils-Dc-kY2uK.js";import"./AGraphicContainer-Q5milCHd.js";import"./TechniqueInstance-X_d75uKO.js";import"./UpdateTracking2D-CvXNcdpU.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeature-DKoLIRUo.js";import"./memoryEstimations-CZsmjxnE.js";import"./GeometryUtils-nFMAd0HX.js";import"./rasterizingUtils-CBvlbWXI.js";import"./floatRGBA-CGz6COIM.js";import"./Rect-CUzevAry.js";import"./Utils-oPmT1Zkc.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-C6T3TLX9.js";import"./ProgramTemplate-B4_WNuZC.js";import"./TileContainer-B_dyO7Iv.js";import"./WGLContainer-rXBoYh6B.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-CPxLiBAn.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-ByczMuu5.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-BC04KMP-.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DPbIYxgp.js";import"./ShaderBuilder-xfqM8Zmu.js";import"./BindType-BBwFZqyN.js";import"./utils-DxwbXqiF.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DvTdCyec.js";import"./OverrideHelper-DY0j0fm6.js";import"./colorUtils-Dj0iUaGa.js";import"./quantizationUtils-CBBegidY.js";import"./AttributeStore-D8QABE7o.js";import"./queryUtils-BI4AyuF2.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CGGK-GXf.js";import"./normalizeUtilsSync-4JXb5YnC.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-DDLaqYR7.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>this.layer?.visible,()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):n.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const p=t?.filter(l);if(!p?.length)return h();const a=s?.name??d;return this._addHighlights(p,a),h(()=>!this.destroyed&&this._removeHighlights(p,a))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
