import{aY as H,aX as $,js as L,ju as M,jv as f,jx as C,m2 as D,jt as W,m3 as q,jq as G,af as N,ak as F,ag as U,al as V,aj as K,r as u,jE as A,jF as R,jG as O,m4 as Y,ai as y}from"./index-Cyz3pbfr.js";import{e as X}from"./Container-DfYkluiO.js";import{c as b,_ as c,T as P,d as p,i as k,Y as v,j as Q,X as J,w as Z,f as tt,g as m,U as et,r as it,K as st,m as E,e as rt,P as at,v as ot,t as lt}from"./GraphShaderModule-BMCI3D2d.js";import{e as nt}from"./TechniqueType-CFPo0AVB.js";class ut{constructor(t,e,i){this.pixelBlock=t,this.extent=e,this.originalPixelBlock=i}get width(){return this.pixelBlock!=null?this.pixelBlock.width:0}get height(){return this.pixelBlock!=null?this.pixelBlock.height:0}render(t){const e=this.pixelBlock;if(e==null)return;const i=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??e});if(i.pixelBlock==null)return;i.pixelBlock.maskIsAlpha&&(i.pixelBlock.premultiplyAlpha=!0);const r=i.pixelBlock.getAsRGBA(),a=t.createImageData(i.pixelBlock.width,i.pixelBlock.height);a.data.set(r),t.putImageData(a,0,0)}getRenderedRasterPixels(){const t=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return t.pixelBlock==null?null:(t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0),{width:t.pixelBlock.width,height:t.pixelBlock.height,renderedRasterPixels:new Uint8Array(t.pixelBlock.getAsRGBA().buffer)})}}function ht(s){return s&&"render"in s}function ct(s){const t=document.createElement("canvas");return t.width=s.width,t.height=s.height,s.render(t.getContext("2d")),t}function dt(s){return ht(s)?s instanceof ut?s.getRenderedRasterPixels()?.renderedRasterPixels:ct(s):s}let bt=class extends X{constructor(t=null,e=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._texture=null,this._width=void 0,this.x=0,this.y=0,this.immutable=e,this.source=t,this.requestRender=this.requestRender.bind(this)}destroy(){this._texture&&(this._texture.dispose(),this._texture=null),this._uploadStatus!=null&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return this._height!==void 0?this._height:this._sourceHeight}set height(t){this._height=t}get source(){return this._source}set source(t){t==null&&this._source==null||(this._source=t,this.invalidateTexture(),this.requestRender())}get texture(){return this._texture}get width(){return this._width!==void 0?this._width:this._sourceWidth}set width(t){this._width=t}beforeRender(t){super.beforeRender(t),this.updateTexture(t)}async setSourceAsync(t,e){this._uploadStatus!=null&&this._uploadStatus.controller.abort();const i=new AbortController,r=H();return $(e,()=>i.abort()),$(i,a=>r.reject(a)),this._uploadStatus={controller:i,resolver:r},this.source=t,r.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}transitionStep(t,e){t>=64&&(this.fadeTransitionEnabled=!1),super.transitionStep(t,e)}setTransform(t){const e=L(this.transforms.displayViewScreenMat3),[i,r]=t.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/t.resolution,o=a*this.width,l=a*this.height,n=Math.PI*this.rotation/180;M(e,e,f(i,r)),M(e,e,f(o/2,l/2)),C(e,e,-n),M(e,e,f(-o/2,-l/2)),D(e,e,f(o,l)),W(this.transforms.displayViewScreenMat3,t.displayViewMat3,e)}setSamplingProfile(t){this._texture&&(t.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(t.samplingMode))}bind(t,e){this._texture&&t.bindTexture(this._texture,e)}async updateTexture({context:t,painter:e}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(t)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const i=dt(this.source);try{if(this._uploadStatus!=null){const{controller:r,resolver:a}=this._uploadStatus,o={signal:r.signal},{width:l,height:n}=this,h=this._texture;await e.textureUploadManager.enqueueTextureUpdate({data:i,texture:h,width:l,height:n},o),a.resolve(),this._uploadStatus=null}else this._texture.setData(i);this.ready()}catch(r){q(r)}}onDetach(){this.destroy()}_createTransforms(){return{displayViewScreenMat3:G()}}_createTexture(t){const e=this.immutable,i=new N;return i.internalFormat=e?U.RGBA8:V.RGBA,i.wrapMode=K.CLAMP_TO_EDGE,i.isImmutable=e,i.width=this._sourceWidth,i.height=this._sourceHeight,new F(t,i)}};function pt(s){const t=new c(.16666666666666666),e=s.multiply(s),i=e.multiply(s),r=t.multiply(i.multiply(-1).add(new c(3).multiply(e)).subtract(new c(3).multiply(s)).add(1)),a=t.multiply(i.multiply(3).subtract(e.multiply(6)).add(4)),o=t.multiply(i.multiply(-3).add(e.multiply(3)).add(s.multiply(3)).add(1)),l=t.multiply(i);return new v(r,a,o,l)}function I(s){const t=pt(s),e=t.x.add(t.y),i=t.z.add(t.w),r=new c(1).subtract(t.y.divide(e)).add(s),a=new c(1).add(t.w.divide(i)).subtract(s);return new v(r,a,e,i)}function mt(s,t,e){const i=new b(new c(1).divide(e.x),0),r=new b(0,new c(1).divide(e.y)),a=t.multiply(e).subtract(.5),o=I(P(a).x).xyz,l=I(P(a).y).xyz;let n=t.add(o.x.multiply(i)),h=t.subtract(o.y.multiply(i));const _=n.add(l.x.multiply(r)),S=h.add(l.x.multiply(r));n=n.subtract(l.y.multiply(r)),h=h.subtract(l.y.multiply(r));let d=p(s,h),B=p(s,n);const j=p(s,S),z=p(s,_);return d=k(d,j,l.z),B=k(B,z,l.z),d=k(d,B,o.z),d}class T extends rt{}u([tt(0,b)],T.prototype,"position",void 0);class xt extends ot{}class x extends at{}u([m(et)],x.prototype,"texture",void 0),u([m(it)],x.prototype,"dvsMat3",void 0),u([m(b)],x.prototype,"coordScale",void 0),u([m(c)],x.prototype,"opacity",void 0);class g extends Q{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const e=this.config.dvsMat3.multiply(new J(t.position.multiply(this.config.coordScale),1));return{glPosition:new v(e,1),texcoord:t.position}}fragment(t){const e=new Z;let i;return i=this.bicubic?mt(this.config.texture,t.texcoord,this.config.coordScale):p(this.config.texture,t.texcoord),e.fragColor=new v(i.rgb.multiply(this.config.opacity),i.a.multiply(this.config.opacity)),e}}u([m(x)],g.prototype,"config",void 0),u([st],g.prototype,"bicubic",void 0),u([A(0,E(T))],g.prototype,"vertex",null),u([A(0,E(xt))],g.prototype,"fragment",null);const w={nearest:{samplingMode:y.NEAREST,mips:!1},bilinear:{samplingMode:y.LINEAR,mips:!1},bicubic:{samplingMode:y.LINEAR,mips:!1},trilinear:{samplingMode:y.LINEAR_MIPMAP_LINEAR,mips:!0}},gt=(s,t,e)=>{if(e.samplingMode==="dynamic"){const{state:i}=s,r=t.resolution/t.pixelRatio/i.resolution,a=Math.round(s.pixelRatio)!==s.pixelRatio,o=r>1.05||r<.95;return i.rotation||o||a||t.isSourceScaled||t.rotation?w.bilinear:w.nearest}return w[e.samplingMode]};class St extends lt{constructor(){super(...arguments),this.name="BrushBitmap",this.type=nt.Bitmap,this.shaders={bitmap:new g}}render(t,e){const{context:i,renderingOptions:r,painter:a}=t;for(const o of e.bitmaps){const l=o.texture;if(!o.source||!o.isReady||l==null)continue;const n=gt(t,o,r);t.timeline.begin(this.name),a.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:o.stencilRef,compare:O.EQUAL,op:{fail:R.KEEP,zFail:R.KEEP,zPass:R.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:o.blendFunction==="additive"?"additive":"composite"}}),o.setSamplingProfile(n);const{coordScale:h,computedOpacity:_,transforms:S}=o,d={texture:{texture:l,unit:Y},dvsMat3:S.displayViewScreenMat3,coordScale:h,opacity:_};a.submitDrawMesh(i,{shader:this.shaders.bitmap,uniforms:{config:d},defines:{bicubic:n===w.bicubic},optionalAttributes:null,useComputeBuffer:!1},a.quadMesh),t.timeline.end(this.name)}}}export{bt as S,ct as f,ht as g,ut as l,St as p};
