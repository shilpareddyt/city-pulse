import{ci as p,l as u,cj as d,a3 as y,ck as c,r as e,v as o,cl as r,f as n,cm as m,cn as h,co as v,cp as w,cq as f,y as b,cr as j}from"./index-CLxXbLZV.js";import{g as a}from"./queryUtils-am8SiDXv.js";import{m as g,n as S,a as $,b as R,y as T}from"./FixedIntervalBinParameters-D3hXOMkZ.js";import"./json-Wa8cmqdu.js";const B=new c({asc:"ascending",desc:"descending"}),x={base:T,key:"type",typeMap:{"auto-interval":R,date:$,"fixed-boundaries":S,"fixed-interval":g}};let t=class extends p.ClonableMixin(u){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!d(i)&&y.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};e([o({types:x,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([r(B)],t.prototype,"binOrder",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([o({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([o({type:n,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([o({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],t.prototype,"distance",void 0),e([o({types:h,json:{read:m,write:!0}})],t.prototype,"geometry",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([o({type:n,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([o({type:[v],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([o({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,s,l)=>{i&&(s[l]={ianaTimeZone:i})}}}})],t.prototype,"outTimeZone",null),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([r(w,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([o({type:f,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([o({type:String,json:{read:a.read,write:{writer:a.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([b("esri.rest.support.AttributeBinsQuery")],t),t.from=j(t);export{t as default};
